<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:BionicFileExplorer.Net.Wpf"
  xmlns:data="clr-namespace:BionicFileExplorer.Net.Wpf.FileSystemModel">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/BionicFileExplorer.Net.Wpf;component/UIResources/Colors.xaml" />
    <ResourceDictionary Source="/BionicFileExplorer.Net.Wpf;component/Themes/Icons.xaml" />
    <ResourceDictionary Source="/BionicFileExplorer.Net.Wpf;component/UIResources/ToolBarRadioButtonStyle.xaml" />
  </ResourceDictionary.MergedDictionaries>
  
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <local:BooleanToVisibiltyInvertConverter x:Key="BooleanToVisibiltyInvertConverter" />
  <local:BytesFileLengthConverter x:Key="BytesFileLengthConverter" />

  <Style TargetType="local:BionicFileExplorerToolBar" />

  <Style x:Key="{x:Type ToolBarTray}"
       TargetType="{x:Type ToolBarTray}">
    <Setter Property="Background" Value="{DynamicResource {x:Static local:BionicFileExplorer.ControlBackgroundBrushKey}}">
    </Setter>
  </Style>
  
  <!--<Style x:Key="ToolBarButtonBaseStyle"
       TargetType="{x:Type ButtonBase}">
    <Setter Property="SnapsToDevicePixels"
          Value="true" />
    <Setter Property="OverridesDefaultStyle"
          Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="Border"
                BorderThickness="1"  Background="{DynamicResource {x:Static local:BionicFileExplorer.ControlBackgroundBrushKey}}">
            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->
  <Style x:Key="ToolBarThumbStyle"
       TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle"
          Value="true" />
    <Setter Property="Cursor"
          Value="SizeAll" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent"
                SnapsToDevicePixels="True">
            <Rectangle Margin="0,2">
              <Rectangle.Fill>
                <DrawingBrush Viewport="0,0,4,4"
                            ViewportUnits="Absolute"
                            Viewbox="0,0,8,8"
                            ViewboxUnits="Absolute"
                            TileMode="Tile">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing Brush="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}"
                                     Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z" />
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Rectangle.Fill>
            </Rectangle>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="ToolBarOverflowButtonStyle"
       TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle"
          Value="true" />
    <Setter Property="Foreground"
          Value="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}" />
    <Setter Property="Background"
          Value="{DynamicResource {x:Static local:BionicFileExplorer.ControlBackgroundBrushKey}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="Border"
                CornerRadius="0,3,3,0"
                SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
            
            <Grid>
              <Path x:Name="Arrow"
                  Fill="{TemplateBinding Foreground}"
                  VerticalAlignment="Bottom"
                  Margin="2,3"
                  Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
              <ContentPresenter />
            </Grid>
          </Border>
          <!--<ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="True">
              <Setter Property="Background" Value="red"/>
            </Trigger>
          </ControlTemplate.Triggers>-->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="{x:Type ToolBar}"
       TargetType="{x:Type ToolBar}">
    <Setter Property="Foreground"
          Value="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}" />
    <Setter Property="Background"
          Value="{DynamicResource {x:Static local:BionicFileExplorer.ControlBackgroundBrushKey}}" />
    <Setter Property="OverridesDefaultStyle"
          Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Border x:Name="Border"
                CornerRadius="2"
                BorderThickness="1" Background="{TemplateBinding Background}">
            <DockPanel>
              <ToggleButton DockPanel.Dock="Right"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                          IsEnabled="{TemplateBinding HasOverflowItems}"
                          Style="{StaticResource ToolBarOverflowButtonStyle}"
                          ClickMode="Press"
                          IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}">
                <Popup x:Name="OverflowPopup"
                     AllowsTransparency="true"
                     Placement="Bottom"
                     StaysOpen="false"
                     Focusable="false"
                     PopupAnimation="Slide"
                     IsOpen="{Binding IsOverflowOpen, 
                RelativeSource={RelativeSource TemplatedParent}}">
                  <Border x:Name="DropDownBorder"
                        BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}">
                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                        Margin="2" 
                                        WrapWidth="200"
                                        Focusable="true"
                                        FocusVisualStyle="{x:Null}"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                  </Border>
                </Popup>
              </ToggleButton>

              <Thumb x:Name="ToolBarThumb"
                   Style="{StaticResource ToolBarThumbStyle}"
                   Width="10" />
              <ToolBarPanel x:Name="PART_ToolBarPanel"
                          IsItemsHost="true"
                          Margin="0,1,2,2"/>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsOverflowOpen"
                   Value="true">
              <Setter TargetName="ToolBarThumb"
                    Property="IsEnabled"
                    Value="false" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked"
                   Value="true">
              <Setter TargetName="ToolBarThumb"
                    Property="Visibility"
                    Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="BionicFileExplorerToolBarTemplate" TargetType="local:BionicFileExplorerToolBar">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      
      <ToolBarTray Background="{DynamicResource {x:Static local:BionicFileExplorer.ControlBackgroundBrushKey}}">
        <ToolBar Style="{StaticResource {x:Type ToolBar}}" 
                         Padding="8,0">
          <RadioButton Content="{StaticResource TilesViewIcon}"
                               Command="{x:Static local:BionicFileExplorer.ShowTilesViewRoutedCommand}"
                               Style="{StaticResource ToolBarRadioButtonStyle}"                                 
                               Padding="2,2"
                               Height="32"
                               Width="32" />
          <RadioButton Content="{StaticResource ExplorerListViewIcon}"
                               Command="{x:Static local:BionicFileExplorer.ShowListViewRoutedCommand}"
                               Style="{StaticResource ToolBarRadioButtonStyle}"
                               Padding="2,2"
                               Height="32"
                               Width="32" />
          <RadioButton Content="{StaticResource TreeViewIcon}"
                               Style="{StaticResource ToolBarRadioButtonStyle}"
                               IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsTreeViewVisible}"
                               Padding="2,2"
                               Height="32"
                               Width="32" />
        </ToolBar>
        <ToolBar Style="{StaticResource {x:Type ToolBar}}" 
                         Padding="8,0">
          <StackPanel>
            <CheckBox x:Name="FileExtensionToggleButton"
                              Content="File extensions"
                              ToolTip="Toggle file extensions"
                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsShowingFileExtensions}"
                              Foreground="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}" />
            <CheckBox x:Name="HiddenFilesToggleButton"
                              Content="Hidden items"
                              ToolTip="Toggle hidden items visibility"
                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsShowingHiddenFiles}"
                              Foreground="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}" />
            <CheckBox x:Name="SystemFilesToggleButton"
                              Content="System items"
                              ToolTip="Toggle system items visibility"
                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsShowingSystemFiles}"
                              Foreground="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}" />
          </StackPanel>
        </ToolBar>
      </ToolBarTray>
      <TextBox Grid.Row="1"
                       IsReadOnly="True" IsReadOnlyCaretVisible="False"
                       Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedFileSystemPath}"
                       Background="{DynamicResource {x:Static local:BionicFileExplorer.ControlBackgroundBrushKey}}"
                       Foreground="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}"  />
    </Grid>
  </ControlTemplate>


  <Style TargetType="{x:Type local:BionicFileExplorer}">
    <Setter Property="Background" Value="{DynamicResource {x:Static local:BionicFileExplorer.ControlBackgroundBrushKey}}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:BionicFileExplorer}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
              </Grid.RowDefinitions>
              <local:BionicFileExplorerToolBar x:Name="PART_ToolBar" />

              <local:FileSystemTreeView x:Name="PART_TreeView" 
                                        Grid.Row="2"
                                        ItemsSource="{TemplateBinding FileSystemTree}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsTreeViewVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Background="{DynamicResource {x:Static local:BionicFileExplorer.ControlBackgroundBrushKey}}"
                                        Foreground="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}">
                <TreeView.ItemTemplate>
                  <HierarchicalDataTemplate DataType="{x:Type data:FileSystemItemModel}"
                                            ItemsSource="{Binding ChildFileSystemItems}">
                    <TextBlock x:Name="Content" Text="{Binding DisplayName}" />
                  </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
              </local:FileSystemTreeView>

              <local:FileSystemListView x:Name="PART_ListView"
                                        Grid.Row="2"
                                        ItemsSource="{TemplateBinding FileSystemTree}"
                                        SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem}"
                                        BorderThickness="1"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsAlternativeViewVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Background="{DynamicResource {x:Static local:BionicFileExplorer.ControlBackgroundBrushKey}}"
                                        Foreground="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}">
                <local:FileSystemListView.Resources>
                  <DataTemplate DataType="{x:Type data:SpecialDirectory}">
                    <StackPanel>
                      <Button x:Name="ParentFolderButton"
                              Height="16"
                              HorizontalContentAlignment="Left"
                              Padding="0,0,0,0"
                              Background="Transparent"
                              Foreground="{DynamicResource {x:Static local:BionicFileExplorer.ForegroundBrushKey}}"
                              BorderThickness="0">
                        <Button.Template>
                          <ControlTemplate TargetType="Button">
                            <Border Grid.Column="1"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                              <ContentPresenter />
                            </Border>
                          </ControlTemplate>
                        </Button.Template>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Left">
                          <Viewbox Height="16"
                                   Width="16"
                                   RenderTransformOrigin="0.5,0.5"
                                   HorizontalAlignment="Left">
                            <Viewbox.RenderTransform>
                              <RotateTransform Angle="90" />
                            </Viewbox.RenderTransform>
                            <TextBlock Text="&#xE751;"
                                       FontFamily="Segoe MDL2 Assets" />
                          </Viewbox>

                          <TextBlock Text="{Binding DisplayName}"
                                     FontSize="12"
                                     FontWeight="Bold"
                                     VerticalAlignment="Center"
                                     Margin="0,0,0,0" />
                        </StackPanel>
                      </Button>
                    </StackPanel>
                  </DataTemplate>
                  <DataTemplate DataType="{x:Type data:FileSystemItemModel}">
                    <StackPanel Orientation="Horizontal">
                      <Image Source="{Binding 
                              RelativeSource={RelativeSource AncestorType=local:FileSystemListBoxItem}, Path=IconSource}" />
                      <TextBlock Text="{Binding DisplayName}" Margin="2,0" />
                    </StackPanel>
                  </DataTemplate>
                  <!--<DataTemplate DataType="{x:Type data:Directory}">
                    <StackPanel Orientation="Horizontal">
                      <Image Source="{Binding 
                              RelativeSource={RelativeSource AncestorType=local:FileSystemListBoxItem}, Path=IconSource}" />
                      <TextBlock Text="{Binding DisplayName}" />
                    </StackPanel>
                  </DataTemplate>-->
                </local:FileSystemListView.Resources>
                <!--<local:FileSystemListView.View>
                  <GridView AllowsColumnReorder="True">
                    <GridViewColumn Header="Name" Width="192">
                      <GridViewColumn.CellTemplate>
                        <DataTemplate>
                          <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding 
                              RelativeSource={RelativeSource AncestorType=local:FileSystemListBoxItem}, Path=IconSource}" />
                            <TextBlock Text="{Binding DisplayName}" Margin="2,0" />
                          </StackPanel>
                        </DataTemplate>

                      </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Size"
                                    Width="96"
                                    DisplayMemberBinding="{Binding Info.Length, Converter={StaticResource BytesFileLengthConverter}, ConverterParameter={x:Static local:BytesUnit.KB}}" />
                    <GridViewColumn Header="Date modified"
                                    Width="128"
                                    DisplayMemberBinding="{Binding Info.LastWriteTime, StringFormat={}{0:g}, ConverterCulture={x:Static system:CultureInfo.CurrentCulture}}" />
                    <GridViewColumn Header="Date created"
                                    Width="128"
                                    DisplayMemberBinding="{Binding Info.CreationTime, StringFormat={}{0:g}, ConverterCulture={x:Static system:CultureInfo.CurrentCulture}}" />
                    <GridViewColumn Header="Type"
                                    Width="96"
                                    DisplayMemberBinding="{Binding Info.Extension}" />
                    <GridViewColumn Header="Attributes"
                                    Width="96"
                                    DisplayMemberBinding="{Binding Info.Attributes}" />
                  </GridView>
                </local:FileSystemListView.View>-->
              </local:FileSystemListView>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



  <Style x:Key="ExpandCollapseToggleStyle"
         TargetType="ToggleButton">
    <Setter Property="Focusable"
            Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid Width="15"
                Height="13"
                Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Storyboard.TargetName="Collapsed">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{x:Static Visibility.Hidden}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Storyboard.TargetName="Expanded">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Viewbox x:Name="Collapsed" Height="8">
              <TextBlock Text="&#xE970;"
                         FontFamily="Segoe MDL2 Assets">
                <TextBlock.Foreground>
                  <SolidColorBrush Color="{DynamicResource  {x:Static local:BionicFileExplorer.ForegroundColorKey}}" Opacity="0.6"/>
                </TextBlock.Foreground>
              </TextBlock>
            </Viewbox>
            <Viewbox x:Name="Expanded"
                     Height="8"
                     Visibility="Hidden">
              <TextBlock Text="&#xE96E;"
                         FontFamily="Segoe MDL2 Assets">
                <TextBlock.Foreground>
                  <SolidColorBrush Color="{DynamicResource  {x:Static local:BionicFileExplorer.ForegroundColorKey}}"
                                   Opacity="0.6" />
                </TextBlock.Foreground>
              </TextBlock>
            </Viewbox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0,0,0,0"
                       StrokeThickness="5"
                       Stroke="Black"
                       StrokeDashArray="1 2"
                       Opacity="0" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style TargetType="local:FileSystemListBoxItem">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:FileSystemListBoxItem">
          <Border x:Name="Border"
                  Padding="2"
                  SnapsToDevicePixels="true"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource SelectedBackgroundColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource SelectedUnfocusedColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
              <ContentPresenter />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsHidden}"
                           Value="True"/>
          <Condition Binding="{Binding IsSystem}"
                     Value="True"/>
          <Condition Binding="{Binding IsDrive}"
                           Value="False"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:BionicFileExplorer}, Path=IsShowingSystemFiles}"
                     Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsHidden}"
                           Value="True"/>
          <Condition Binding="{Binding IsSystem}"
                     Value="False"/>
          <Condition Binding="{Binding IsDrive}"
                           Value="False"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:BionicFileExplorer}, Path=IsShowingHiddenFiles}"
                           Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsHidden}"
                           Value="False"/>
          <Condition Binding="{Binding IsSystem}"
                     Value="True"/>
          <Condition Binding="{Binding IsDrive}"
                           Value="False"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:BionicFileExplorer}, Path=IsShowingSystemFiles}"
                     Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>
  
  <!--<Style TargetType="local:FileSystemListBoxItem">
    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:FileSystemListBoxItem">
          <Border x:Name="Border"
                  Padding="2"
                  SnapsToDevicePixels="true">
            <Border.Background>
              <SolidColorBrush Color="Transparent" />
            </Border.Background>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource SelectedBackgroundColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                  Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource SelectedUnfocusedColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <StackPanel Orientation="Horizontal">
              <Image Source="{TemplateBinding IconSource}" />
              <ContentPresenter Margin="2,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->

  <Style TargetType="{x:Type local:FileSystemTreeViewItem}">
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="HorizontalContentAlignment"
            Value="Stretch" />
    <Setter Property="HorizontalAlignment"
            Value="Stretch" />
    <Setter Property="IsExpanded"
            Value="{Binding IsNodeVisited, Mode=TwoWay}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:FileSystemTreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19"
                                Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                  Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource SelectedBackgroundColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="SelectedInactive">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                  Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource SelectedUnfocusedColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Storyboard.TargetName="ItemsHost">
                      <DiscreteObjectKeyFrame KeyTime="0"
                                              Value="{x:Static Visibility.Visible}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Collapsed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ToggleButton x:Name="Expander"
                          Style="{StaticResource ExpandCollapseToggleStyle}"
                          ClickMode="Press"
                          Background="Transparent"
                          IsChecked="{Binding IsExpanded, 
            RelativeSource={RelativeSource TemplatedParent}}" />
            <Border x:Name="Bd"
                    Grid.Column="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
              <StackPanel Orientation="Horizontal">
                <Image Source="{TemplateBinding IconSource}" />
                <ContentPresenter x:Name="PART_Header"
                                  ContentSource="Header"
                                  Margin="2,2"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
              </StackPanel>
            </Border>
            <ItemsPresenter x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Visibility="Collapsed"
                            Margin="-8,0,0,0"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems"
                     Value="false">
              <Setter TargetName="Expander"
                      Property="Visibility"
                      Value="Hidden" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader"
                           Value="false" />
                <Condition Property="Width"
                           Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header"
                      Property="MinWidth"
                      Value="75" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader"
                           Value="false" />
                <Condition Property="Height"
                           Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header"
                      Property="MinHeight"
                      Value="19" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsHidden}"
                           Value="True"/>
          <Condition Binding="{Binding IsSystem}"
                     Value="True"/>
          <Condition Binding="{Binding IsDrive}"
                           Value="False"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:BionicFileExplorer}, Path=IsShowingSystemFiles}"
                     Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsHidden}"
                           Value="True"/>
          <Condition Binding="{Binding IsSystem}"
                     Value="False"/>
          <Condition Binding="{Binding IsDrive}"
                           Value="False"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:BionicFileExplorer}, Path=IsShowingHiddenFiles}"
                           Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsHidden}"
                           Value="False"/>
          <Condition Binding="{Binding IsSystem}"
                     Value="True"/>
          <Condition Binding="{Binding IsDrive}"
                           Value="False"/>
          <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:BionicFileExplorer}, Path=IsShowingSystemFiles}"
                     Value="False"/>
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>
